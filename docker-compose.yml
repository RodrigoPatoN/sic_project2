version: "3.7"

services:

  influxdb:

    image: influxdb:1.8.10
    container_name: influxdb
    restart: always

    ports:
      - 8086:8086

    environment:
      - INFLUXDB_DB=weather

    volumes:
      - data:/var/lib/influxdb
   
    networks:
      - telegraf-influxdb
      - influxdb-chronograf


  kapacitor:

    image: kapacitor
    container_name: kapacitor
    restart: always

    ports:
      - 9095:9095

    volumes:
      - ./kapacitor.conf:/etc/kapacitor/kapacitor.conf
      - data:/var/lib/kapacitor
      - ./TICK_scripts/:/./TICK_scripts

    networks:
      - mqtt-kapacitor
      - influxdb-chronograf

    command: bash -c "
      kapacitor define temperature_alert -tick ./TICK_scripts/tasks/temperature_alert.tick
      && kapacitor enable temperature_alert"

    depends_on:
      rabbitmq:
        condition: service_healthy

      influxdb:
        condition: service_started


  chronograf:

    image: chronograf
    container_name: chronograf
    restart: always

    ports:
      - 8888:8888

    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - KAPACITOR_URL=http://kapacitor:9095

    volumes:
      - data:/var/lib/chronograf

    depends_on:
      - influxdb
      - kapacitor
   
    networks:
      - influxdb-chronograf


  telegraf:

    image: telegraf
    container_name: telegraf
    restart: always

    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf

    depends_on:

      influxdb:
        condition: service_started

      kafka-server:
        condition: service_started

      rabbitmq:
        condition: service_healthy
  
    networks:
      - kafka-telegraf
      - kafka-publisher
      - telegraf-influxdb
      - mqtt-telegraf
  

  kafka-server:
  
    image: bitnami/kafka

    ports:
      - "9092:9092"

    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka-server:9092,EXTERNAL://kafka-server:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"

    depends_on:
      - kafka-zookeeper
    
    networks:
      - kafka-telegraf
      - kafka-publisher


  kafka-zookeeper:
    
    image: bitnami/zookeeper

    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

    networks:    
      - kafka-telegraf
      - kafka-publisher


  publisher:

    build: ./producer/

    depends_on:
      kafka-server:
        condition: service_started

    volumes:
      - ./producer/:/./producer/

    deploy:
      mode: replicated
      replicas: 4
   
    networks:
      - kafka-publisher

    command: python3 producer.py


  rabbitmq:
  
    build: ./rabbitmq      

    container_name: rabbitmq

    ports:
      - 1883:1883
        
    networks:
      - mqtt-telegraf
      - mqtt-predictor
      - mqtt-kapacitor

    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q" ,"ping"]
      interval: 5s
      timeout: 10s
      retries: 5  

  predictor:

    build: ./test_predict/

    depends_on:
      rabbitmq:
        condition: service_healthy
    
    networks:
      - mqtt-telegraf
      - mqtt-predictor

    volumes:
      - ./test_predict/:/./test_predict/

    command: python3 test.py


networks:
  kafka-telegraf:
  kafka-publisher:
  mqtt-telegraf:
  mqtt-predictor:
  mqtt-kapacitor:
  telegraf-influxdb:
  influxdb-chronograf:

volumes:
  data:
